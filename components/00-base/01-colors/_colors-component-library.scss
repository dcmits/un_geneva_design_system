@use 'colors-used' as *;
@use 'colors-vars' as *;


// These styles only affect the colors "Usage" page in the component library
.cl-colors {
  padding: 1rem;
}

.cl-variables__list,
.cl-colors__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 2rem;
  padding: 0;
}

.cl-variables__item,
.cl-colors__item {
  list-style: none;
  padding: 1rem 2rem;
  transition: all 0.4s;
  flex: 1 1 20%;
  min-width: 150px;
  min-height: 150px;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}

.cl-variables__item .cl-colors__title {
  background-color: $white;
}

// Dynamically set swatch text color based on the lightness of the background color
@function set-color(
  $color,
  $text-primary: accent-high,
  $text-secondary: muted
) {
  @if (lightness($color) > 50) {
    @return clr($text-primary);
  } @else {
    @return clr($text-secondary);
  }
}

// Style default color swatches
@each $name, $color in $defaultColors {
  .cl-colors__item--default {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

// Style dark color swatches
@each $name, $color in $darkColors {
  .cl-colors__item--dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color, muted, accent-high);
    }
  }
}

.cl-variables__item {
  text-align: center;
  display: block;
  width: 150px;
  flex: none;

  .title {
    background-color: $white;
    font-weight: bold;
  }

  @each $name, $color in $colorVars {
    &--#{$name} {
      background-color: $color;

      .value {
        background-color: $white;
        
        &::before {
          content: "#{$color}";
          -webkit-user-select: text;  /* Chrome 49+ */
          -moz-user-select: text;     /* Firefox 43+ */
          -ms-user-select: text;      /* No support yet */
          user-select: text;
        }
      }
   }
  }
}
